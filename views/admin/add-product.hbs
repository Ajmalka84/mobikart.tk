<style>
    .g-height-50 {
        height: 50px;
    }

    .g-width-50 {
        width: 50px !important;
    }

    @media (min-width: 0) {
        .g-pa-30 {
            padding: 2.14286rem !important;
        }
    }

    .g-bg-secondary {
        background-color: #fafafa !important;
    }

    .u-shadow-v18 {
        box-shadow: 0 5px 10px -6px rgba(0, 0, 0, 0.15);
    }

    .g-color-gray-dark-v4 {
        color: #777 !important;
    }

    .g-font-size-12 {
        font-size: 0.85714rem !important;
    }

    .media-comment {
        margin-top: 20px
    }

    .singleImageCanvasContainer {
        overflow: hidden;
        height: 350px;
        width: 30%;
        display: inline-block;
        position: relative;
        padding-right: 0px;
        margin-right: 15px;
        border: 2px solid #dfdfdf;
        margin-bottom: 10px;
        padding: 4px;
        border-radius: .25rem;
    }

    .singleImageCanvasContainer .singleImageCanvasCloseBtn {
        position: absolute;
        right: 0;
    }

    .singleImageCanvasContainer .singleImageCanvas {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.js"></script>

<main class="main" id="main">
<section class="" style="background-color: #eee;">
  <div class="container h-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="col-lg-7 col-xl-7">
        <div class="card text-black" style="border-radius: 25px;">
          <div class="card-body p-md-5">
            <div class="row justify-content-center">
              <div class="">

                <p class="text-center h3">Add Product</p>

                

                <form class="mx-1 mx-md-4" action="/admin/productmanagement/addproduct" method="post" enctype="multipart/form-data">
                  
                  <div class="d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-user fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                      <label class="form-label" for="name">Name</label>
                      <input type="text" id="name" onkeyup="validatename()" name="name" class="form-control" />
                       <span class="text-danger" id="ErrorName"></span>
                    </div>
                  </div>

                  <div class="d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-envelope fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                      <label class="form-label" for="brand">Brand</label><br>
                     
                      <select for="brand" name="brand" id="brand" style="width: 15em;height:2em ;">
                        {{#each response}}
                        <option value="{{this.brand}}">{{this.brand}}</option>
                        {{/each}}
                      </select>
                      
                       <span class="text-danger" id="ErrorEmail"></span>
                    </div>
                  </div>

                  <div class="d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-lock fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                     <label class="form-label" for="password">Price</label>
                      <input type="text" id="password" onkeyup="validatepassword()" name="price" class="form-control" />
                      <span class="text-danger" id="ErrorPassword"></span>
                    </div>
                  </div>
                  
                  <div class="d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-lock fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                     <label class="form-label" for="password">Stock</label>
                      <input type="number" id="stock" onkeyup="validatepassword()" name="stock" class="form-control" />
                      <span class="text-danger" id="ErrorPassword"></span>
                    </div>
                  </div>
 
                  <div class="d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-lock fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                     <label class="form-label" for="productOffer">Product Description</label>
                      <input type="text" id="productDescription1" onkeyup="validatepassword()" name="productDescription1" class="form-control" />
                      <span class="text-danger" id="ErrorPassword"></span>
                    </div>
                  </div>

                  <div class="d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-lock fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                     
                      <input type="text" id="productDescription2" onkeyup="validatepassword()" name="productDescription2" class="form-control" />
                      <span class="text-danger" id="ErrorPassword"></span>
                    </div>
                  </div>
                  
                  <div class="d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-lock fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                     
                      <input type="text" id="productDescription3" onkeyup="validatepassword()" name="productDescription3" class="form-control" />
                      <span class="text-danger" id="ErrorPassword"></span>
                    </div>
                  </div>

                  <div class="d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-lock fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                     
                      <input type="text" id="productDescription4" onkeyup="validatepassword()" name="productDescription4" class="form-control" />
                      <span class="text-danger" id="ErrorPassword"></span>
                    </div>
                  </div>
                  
                  <div class="d-flex flex-row align-items-center ">
                    <i class="fas fa-lock fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                      <div class="form-outline mb-4">
                          <label class="form-label" for="id_image">Image</label>
                          <span id="croppedImages"></span>
                          <input type="file" class="form-control" id="id_image" name="image" data-bs-toggle="modal"
                          data-bs-target="#exampleModal" accept="image/*" multiple>
                      </div>
                      
                    </div>
                  </div>

                  <div class="form-check d-flex justify-content-center ">
                    <p class="text-danger">{{title}}</p>
                  </div>

                  <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4">
                    <button type="submit" class="btn btn-primary btn-lg">Add Product</button>
                  </div>
                    {{#if errMess}}
                   <p class="text-center text-danger">{{errMess}}</p>
                    {{/if}}
                </form>
              </div>
              
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
</main>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
         <div class="form-group row" id="test">
          </div>
      </div>
      {{!-- <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
        
      </div> --}}
      <div class="modal-header text-center">
          <button class="btn btn-success" type="button" data-bs-dismiss="modal" aria-label="Close">Save
           Changes</button>
      </div>
    </div>
  </div>
</div>


<script>
    const input = document.getElementById('id_image')
    const test = document.getElementById('test')
    input.addEventListener('change', () => {
        // Getting image file object from the input variable
        const img_data = []
       // const imagebox = []
       // const crop_btn = []
       // const confirm_btn = []
        const url = []
        const length= input.files.length
        for (i = 0; i < length; i++) {
            test.innerHTML += `<div class="col-4"><div id="image-box${i}" class="image-container" style="height: 350px; width: 350px;"> </div>
    <button class="btn btn-outline-info" id="crop-btn${i}" style="width: 100%; margin-top: 10px; display: block;" type="button">Crop</button> </div>`
        }
        for (i = 0; i < length; i++) {
            img_data[i] = input.files[i]
        }
        
        img_data.forEach((image_data, i) => {
            url[i] = URL.createObjectURL(image_data)
        })
        // createObjectURL() static method creates a DOMString containing a URL representing the object given in the parameter.
        // The new object URL represents the specified File object or Blob object.
        url.forEach((url,i)=>{
            document.getElementById('image-box'+i).innerHTML = `<img src="${url}" id="image${i}" style="width:100%;">`
        })
        
        // Creating a image tag inside imagebox which will hold the cropping view image(uploaded file) to it using the url created before.

        // Storing that cropping view image in a variable
  

        // Displaying the image box
        for(i=0;i<length;i++){
            document.getElementById('image-box'+i).style.display= 'block'
             document.getElementById('crop-btn'+i).style.display= 'block'
        }
       

        for(i=0;i<length;i++){
            cropper(img_data[i],document.getElementById('image'+i),i,document.getElementById('crop-btn'+i),document.getElementById('image-box'+i))
        }

        

        // Creating a croper object with the cropping view image
        // The new Cropper() method will do all the magic and diplay the cropping view and adding cropping functionality on the website
        // For more settings, check out their official documentation at https://github.com/fengyuanchen/cropperjs
        let container = new DataTransfer();
        let fileInputElement = document.getElementById('id_image');



        function cropper(img_data, image, index, crop_btn, imagebox) {

            const cropper = new Cropper(image, {
                autoCropArea: 1,
                viewMode: 1,
                scalable: false,
                zoomable: false,
                movable: false,
                minCropBoxWidth: 50,
                minCropBoxHeight: 50,
            })

            // When crop button is clicked this event will get triggered
            crop_btn.addEventListener('click', () => {
                // This method coverts the selected cropped image on the cropper canvas into a blob object
                cropper.getCroppedCanvas().toBlob((blob) => {

                    // Gets the original image data
                    // Make a new cropped image file using that blob object, image_data.name will make the new file name same as original image
                    let file = new File([blob], img_data.name, { type: "image/*", lastModified: new Date().getTime() });
                    // Create a new container

                    // Add the cropped image file to the container
                    container.items.add(file);

                    fileInputElement.files = container.files

                    // Replace the original image file with the new cropped image file
                  // Hide the cropper box
                    imagebox.style.display = 'none'
                    // Hide the crop button
                    crop_btn.style.display = 'none'
                });
            });
        }
    });
</script>